/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Event is a report of an event somewhere in the cluster.
 */
export interface EventV1 {
  /**
   * What action was taken/failed regarding to the Regarding object.
   */
  action?: string | null;
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: "v1";
  /**
   * The number of times this event has occurred.
   */
  count?: number | null;
  /**
   * MicroTime is version of Time with microsecond level precision.
   */
  eventTime?: string | null;
  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   */
  firstTimestamp?: string | null;
  /**
   * ObjectReference contains enough information to let you inspect or modify the referred object.
   */
  involvedObject: {
    [k: string]: any;
  } | null;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: "Event";
  /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   */
  lastTimestamp?: string | null;
  /**
   * A human-readable description of the status of this operation.
   */
  message?: string | null;
  /**
   * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
   */
  metadata: {
    [k: string]: any;
  } | null;
  /**
   * This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
   */
  reason?: string | null;
  /**
   * ObjectReference contains enough information to let you inspect or modify the referred object.
   */
  related?: {
    [k: string]: any;
  } | null;
  /**
   * Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
   */
  reportingComponent?: string | null;
  /**
   * ID of the controller instance, e.g. `kubelet-xyzf`.
   */
  reportingInstance?: string | null;
  /**
   * EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
   */
  series?: {
    [k: string]: any;
  } | null;
  /**
   * EventSource contains information for an event.
   */
  source?: {
    [k: string]: any;
  } | null;
  /**
   * Type of this event (Normal, Warning), new types could be added in the future
   */
  type?: string | null;
}
