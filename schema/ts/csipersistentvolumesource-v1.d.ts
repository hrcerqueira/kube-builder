/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Represents storage that is managed by an external CSI volume driver (Beta feature)
 */
export interface CsipersistentvolumesourceV1 {
  /**
   * SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
   */
  controllerExpandSecretRef?: {
    [k: string]: any;
  } | null;
  /**
   * SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
   */
  controllerPublishSecretRef?: {
    [k: string]: any;
  } | null;
  /**
   * Driver is the name of the driver to use for this volume. Required.
   */
  driver: string | null;
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
   */
  fsType?: string | null;
  /**
   * SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
   */
  nodePublishSecretRef?: {
    [k: string]: any;
  } | null;
  /**
   * SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
   */
  nodeStageSecretRef?: {
    [k: string]: any;
  } | null;
  /**
   * Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).
   */
  readOnly?: boolean | null;
  /**
   * Attributes of the volume to publish.
   */
  volumeAttributes?: {
    [k: string]: any;
  } | null;
  /**
   * VolumeHandle is the unique volume name returned by the CSI volume pluginâ€™s CreateVolume to refer to the volume on all subsequent calls. Required.
   */
  volumeHandle: string | null;
}
