/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * ContainerStatus contains details for the current status of this container.
 */
export interface ContainerstatusV1 {
  /**
   * Container's ID in the format 'docker://<container_id>'.
   */
  containerID?: string | null;
  /**
   * The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
   */
  image: string | null;
  /**
   * ImageID of the container's image.
   */
  imageID: string | null;
  /**
   * ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
   */
  lastState?: {
    [k: string]: any;
  } | null;
  /**
   * This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
   */
  name: string | null;
  /**
   * Specifies whether the container has passed its readiness probe.
   */
  ready: boolean | null;
  /**
   * The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
   */
  restartCount: number | null;
  /**
   * Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
   */
  started?: boolean | null;
  /**
   * ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
   */
  state?: {
    [k: string]: any;
  } | null;
}
